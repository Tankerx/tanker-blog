2017-10-23 10:22:31,185 ERROR 1057 [-/192.168.1.104/-/110ms POST /articleSubmit] nodejs.ER_BAD_FIELD_ERRORError: ER_BAD_FIELD_ERROR: Unknown column 'create_date' in 'field list'
    at Query.Sequence._packetToError (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/Protocol.js:279:23)
    at Parser.write (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/Parser.js:76:12)
    at Protocol.write (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:188:7)
    at readableAddChunk (_stream_readable.js:176:18)
    at Socket.Readable.push (_stream_readable.js:134:10)
    at TCP.onread (net.js:547:20)
    --------------------
    at Pool.query (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/Pool.js:199:23)
    at /Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/pify/index.js:29:7
    at Pool.<anonymous> (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/pify/index.js:12:10)
    at Pool.ret [as query] (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/pify/index.js:56:34)
    at RDSClient.proto._query (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/ali-rds/lib/client.js:34:20)
    at RDSClient.proto.query (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/ali-rds/lib/operator.js:54:29)
    at next (native)
    at onFulfilled (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/co/index.js:65:19)
    at /Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/co/index.js:54:5
    at RDSClient.co (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/co/index.js:50:10)
    sql: INSERT INTO `article`(`id`, `article_content`, `article_name`, `user_id`, `create_date`, `update_date`) VALUES('05ad1d00-b799-11e7-8e45-fb7739d6f516', '<h1 data-v-13f76525=\"\" data-v-3f216172=\"\" class=\"post-title\" style=\"font-size: 2.7rem; margin: 0.67em 0px; padding: 0.27rem 0px; line-height: 1.3; color: rgb(51, 51, 51); font-family: -apple-system, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, Arial, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">Vue 折腾记 - (10) 给axios做个挺靠谱的封装(报错,鉴权,跳转,拦截,提示)</h1><h1 id=\"-\" style=\"margin: 1.3rem 0px; line-height: 1.2;\">前言</h1><p style=\"line-height: 2.27rem;\">不推荐完全copy过去,可以看看我是如何针对我这边业务;<br/>做的一个axios的封装及实现的思路</p><hr style=\"box-sizing: content-box; height: 0px; overflow: visible; border-style: solid none none; border-top-color: rgb(221, 221, 221); border-bottom-width: initial; border-bottom-color: initial; border-left-width: initial; border-left-color: initial; border-right-width: initial; border-right-color: initial; margin-top: 2.7rem; margin-bottom: 2.7rem;\"/><h1 id=\"-\" style=\"margin: 1.3rem 0px; line-height: 1.2;\">需求及实现</h1><ul style=\"padding: 0px 0px 0px 2.7rem;\" class=\" list-paddingleft-2\"><li><p>统一捕获接口报错</p></li><li><p>弹窗提示</p></li><li><p>报错重定向</p></li><li><p>基础鉴权</p></li><li><p>表单序列化</p></li></ul><hr style=\"box-sizing: content-box; height: 0px; overflow: visible; border-style: solid none none; border-top-color: rgb(221, 221, 221); border-bottom-width: initial; border-bottom-color: initial; border-left-width: initial; border-left-color: initial; border-right-width: initial; border-right-color: initial; margin-top: 2.7rem; margin-bottom: 2.7rem;\"/><h1 id=\"-\" style=\"margin: 1.3rem 0px; line-height: 1.2;\">实现的功能</h1><ul style=\"padding: 0px 0px 0px 2.7rem;\" class=\" list-paddingleft-2\"><li><p>统一捕获接口报错 : 用的axios内置的拦截器</p></li><li><p>弹窗提示: 引入&nbsp;<code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\">Element UI</code>的<code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\">Message</code>组件</p></li><li><p>报错重定向: 路由钩子</p></li><li><p>基础鉴权: 服务端过期时间戳和token,还有借助路由的钩子</p></li><li><p>表单序列化: 我这边直接用<code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\">qs</code>(npm模块),你有时间也可以自己写</p></li></ul><hr style=\"box-sizing: content-box; height: 0px; overflow: visible; border-style: solid none none; border-top-color: rgb(221, 221, 221); border-bottom-width: initial; border-bottom-color: initial; border-left-width: initial; border-left-color: initial; border-right-width: initial; border-right-color: initial; margin-top: 2.7rem; margin-bottom: 2.7rem;\"/><h1 id=\"-\" style=\"margin: 1.3rem 0px; line-height: 1.2;\">效果图</h1><p style=\"line-height: 2.27rem;\"><span style=\"font-weight: 700;\">坑都已经爬过,现在复现那些错误有点麻烦..所以没法录制动态图</span></p><hr style=\"box-sizing: content-box; height: 0px; overflow: visible; border-style: solid none none; border-top-color: rgb(221, 221, 221); border-bottom-width: initial; border-bottom-color: initial; border-left-width: initial; border-left-color: initial; border-right-width: initial; border-right-color: initial; margin-top: 2.7rem; margin-bottom: 2.7rem;\"/><h1 id=\"-\" style=\"margin: 1.3rem 0px; line-height: 1.2;\">用法及封装</h1><ul style=\"padding: 0px 0px 0px 2.7rem;\" class=\" list-paddingleft-2\"><li><p>用法</p></li></ul><pre style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1em; line-height: 1.93rem; overflow: auto;\">//&nbsp;服务层&nbsp;,&nbsp;import默认会找该目录下index.js的文件,这个可能有小伙伴不知道//&nbsp;可以去了解npm的引入和es6引入的理论概念import&nbsp;axiosPlugin&nbsp;from&nbsp;&quot;./server&quot;;&nbsp;\nVue.use(axiosPlugin);</pre><ul style=\"padding: 0px 0px 0px 2.7rem;\" class=\" list-paddingleft-2\"><li><p>对axios的封装(AXIOS:<code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\">index.js</code>)</p></li></ul><pre style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1em; line-height: 1.93rem; overflow: auto;\">import&nbsp;axios&nbsp;from&nbsp;&quot;axios&quot;;import&nbsp;qs&nbsp;from&nbsp;&quot;qs&quot;;import&nbsp;{&nbsp;Message&nbsp;}&nbsp;from&nbsp;&quot;element-ui&quot;;import&nbsp;router&nbsp;from&nbsp;&quot;../router&quot;;const&nbsp;Axios&nbsp;=&nbsp;axios.create({&nbsp;&nbsp;baseURL:&nbsp;&quot;/&quot;,&nbsp;//&nbsp;因为我本地做了反向代理\n&nbsp;&nbsp;timeout:&nbsp;10000,&nbsp;&nbsp;responseType:&nbsp;&quot;json&quot;,&nbsp;&nbsp;withCredentials:&nbsp;true,&nbsp;//&nbsp;是否允许带cookie这些\n&nbsp;&nbsp;headers:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&quot;Content-Type&quot;:&nbsp;&quot;application/x-www-form-urlencoded;charset=utf-8&quot;\n&nbsp;&nbsp;}\n});//POST传参序列化(添加请求拦截器)Axios.interceptors.request.use(&nbsp;&nbsp;config&nbsp;=&gt;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;在发送请求之前做某件事\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.method&nbsp;===&nbsp;&quot;post&quot;&nbsp;||\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.method&nbsp;===&nbsp;&quot;put&quot;&nbsp;||\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.method&nbsp;===&nbsp;&quot;delete&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;序列化\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.data&nbsp;=&nbsp;qs.stringify(config.data);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;若是有做鉴权token&nbsp;,&nbsp;就给头部带上token\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(localStorage.token)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.headers.Authorization&nbsp;=&nbsp;localStorage.token;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;config;\n&nbsp;&nbsp;},\n&nbsp;&nbsp;error&nbsp;=&gt;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;Message({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;饿了么的消息弹窗组件,类似toast\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showClose:&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;error,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;&quot;error.data.error.message&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Promise.reject(error.data.error.message);\n&nbsp;&nbsp;}\n);//返回状态判断(添加响应拦截器)Axios.interceptors.response.use(&nbsp;&nbsp;res&nbsp;=&gt;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//对响应数据做些事\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(res.data&nbsp;&amp;&amp;&nbsp;!res.data.success)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Message({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;饿了么的消息弹窗组件,类似toast\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showClose:&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;res.data.error.message.message\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?&nbsp;res.data.error.message.message\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;res.data.error.message,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;&quot;error&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Promise.reject(res.data.error.message);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;res;\n&nbsp;&nbsp;},\n&nbsp;&nbsp;error&nbsp;=&gt;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;用户登录的时候会拿到一个基础信息,比如用户名,token,过期时间戳\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;直接丢localStorage或者sessionStorage\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!window.localStorage.getItem(&quot;loginUserBaseInfo&quot;))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;若是接口访问的时候没有发现有鉴权的基础信息,直接返回登录页\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/login&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;若是有基础信息的情况下,判断时间戳和当前的时间,若是当前的时间大于服务器过期的时间\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;乖乖的返回去登录页重新登录\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;lifeTime&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSON.parse(window.localStorage.getItem(&quot;loginUserBaseInfo&quot;)).lifeTime&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1000;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;nowTime&nbsp;=&nbsp;new&nbsp;Date().getTime();&nbsp;//&nbsp;当前时间的时间戳\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(nowTime,&nbsp;lifeTime);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(nowTime&nbsp;&gt;&nbsp;lifeTime);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(nowTime&nbsp;&gt;&nbsp;lifeTime)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Message({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showClose:&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;&quot;登录状态信息过期,请重新登录&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;&quot;error&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/login&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;下面是接口回调的satus&nbsp;,因为我做了一些错误页面,所以都会指向对应的报错页面\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(error.response.status&nbsp;===&nbsp;403)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/error/403&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(error.response.status&nbsp;===&nbsp;500)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/error/500&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(error.response.status&nbsp;===&nbsp;502)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/error/502&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(error.response.status&nbsp;===&nbsp;404)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/error/404&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;返回&nbsp;response&nbsp;里的错误信息\n&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;errorInfo&nbsp;=&nbsp;&nbsp;error.data.error&nbsp;?&nbsp;error.data.error.message&nbsp;:&nbsp;error.data;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Promise.reject(errorInfo);\n&nbsp;&nbsp;}\n);//&nbsp;对axios的实例重新封装成一个plugin&nbsp;,方便&nbsp;Vue.use(xxxx)export&nbsp;default&nbsp;{&nbsp;&nbsp;install:&nbsp;function(Vue,&nbsp;Option)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;Object.defineProperty(Vue.prototype,&nbsp;&quot;$http&quot;,&nbsp;{&nbsp;value:&nbsp;Axios&nbsp;});\n&nbsp;&nbsp;}\n};</pre><ul style=\"padding: 0px 0px 0px 2.7rem;\" class=\" list-paddingleft-2\"><li><p>路由钩子的调整(Router:<code style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\">index.js</code>)</p></li></ul><pre style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1em; line-height: 1.93rem; overflow: auto;\">import&nbsp;Vue&nbsp;from&nbsp;&quot;vue&quot;;import&nbsp;Router&nbsp;from&nbsp;&quot;vue-router&quot;;import&nbsp;layout&nbsp;from&nbsp;&quot;@/components/layout/layout&quot;;//&nbsp;版块有点多,版块独立路由管理,里面都是懒加载引入import&nbsp;customerManage&nbsp;from&nbsp;&quot;./customerManage&quot;;&nbsp;//&nbsp;客户管理import&nbsp;account&nbsp;from&nbsp;&quot;./account&quot;;&nbsp;//登录import&nbsp;adManage&nbsp;from&nbsp;&quot;./adManage&quot;;&nbsp;//&nbsp;广告管理import&nbsp;dataStat&nbsp;from&nbsp;&quot;./dataStat&quot;;&nbsp;//&nbsp;数据统计import&nbsp;logger&nbsp;from&nbsp;&quot;./logger&quot;;&nbsp;//&nbsp;日志import&nbsp;manager&nbsp;from&nbsp;&quot;./manager&quot;;&nbsp;//&nbsp;管理者import&nbsp;putonManage&nbsp;from&nbsp;&quot;./putonManage&quot;;&nbsp;//&nbsp;投放管理import&nbsp;error&nbsp;from&nbsp;&quot;./error&quot;;&nbsp;//&nbsp;服务端错误import&nbsp;{&nbsp;Message&nbsp;}&nbsp;from&nbsp;&quot;element-ui&quot;;\n\nVue.use(Router);//&nbsp;请跳过这一段,看下面的const&nbsp;router&nbsp;=&nbsp;new&nbsp;Router({&nbsp;&nbsp;hashbang:&nbsp;false,&nbsp;&nbsp;mode:&nbsp;&quot;history&quot;,&nbsp;&nbsp;routes:&nbsp;[\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redirect:&nbsp;&quot;/adver&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;component:&nbsp;layout,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;children:&nbsp;[\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...customerManage,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...adManage,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...dataStat,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...putonManage,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...manager,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...logger\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]\n&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;...account,\n&nbsp;&nbsp;&nbsp;&nbsp;...error\n&nbsp;&nbsp;]\n});//&nbsp;路由拦截//&nbsp;差点忘了说明,不是所有版块都需要鉴权的//&nbsp;所以需要鉴权,我都会在路由meta添加添加一个字段requireLogin,设置为true的时候//&nbsp;这货就必须走鉴权,像登录页这些不要,是可以直接访问的!!!router.beforeEach((to,&nbsp;from,&nbsp;next)&nbsp;=&gt;&nbsp;{&nbsp;&nbsp;if&nbsp;(to.matched.some(res&nbsp;=&gt;&nbsp;res.meta.requireLogin))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;判断是否需要登录权限\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(window.localStorage.getItem(&quot;loginUserBaseInfo&quot;))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;判断是否登录\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;lifeTime&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSON.parse(window.localStorage.getItem(&quot;loginUserBaseInfo&quot;)).lifeTime&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1000;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;nowTime&nbsp;=&nbsp;(new&nbsp;Date()).getTime();&nbsp;//&nbsp;当前时间的时间戳\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(nowTime&nbsp;&lt;&nbsp;lifeTime)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Message({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showClose:&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;&quot;登录状态信息过期,请重新登录&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;&quot;error&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/login&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;没登录则跳转到登录界面\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/login&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;next();\n&nbsp;&nbsp;}\n});export&nbsp;default&nbsp;router;</pre><p style=\"line-height: 2.27rem;\"><span style=\"font-weight: 700;\">axios可配置的一些选项,其他的具体看官网说明哈</span></p><pre style=\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1em; line-height: 1.93rem; overflow: auto;\">export&nbsp;default&nbsp;{&nbsp;&nbsp;//&nbsp;请求地址\n&nbsp;&nbsp;url:&nbsp;&quot;/user&quot;,&nbsp;&nbsp;//&nbsp;请求类型\n&nbsp;&nbsp;method:&nbsp;&quot;get&quot;,&nbsp;&nbsp;//&nbsp;请根路径\n&nbsp;&nbsp;baseURL:&nbsp;&quot;http://www.mt.com/api&quot;,&nbsp;&nbsp;//&nbsp;请求前的数据处理\n&nbsp;&nbsp;transformRequest:&nbsp;[function(data)&nbsp;{}],&nbsp;&nbsp;//&nbsp;请求后的数据处理\n&nbsp;&nbsp;transformResponse:&nbsp;[function(data)&nbsp;{}],&nbsp;&nbsp;//&nbsp;自定义的请求头\n&nbsp;&nbsp;headers:&nbsp;{&nbsp;&quot;x-Requested-With&quot;:&nbsp;&quot;XMLHttpRequest&quot;&nbsp;},&nbsp;&nbsp;//&nbsp;URL查询对象\n&nbsp;&nbsp;params:&nbsp;{&nbsp;id:&nbsp;12&nbsp;},&nbsp;&nbsp;//&nbsp;查询对象序列化函数\n&nbsp;&nbsp;paramsSerializer:&nbsp;function(params)&nbsp;{},&nbsp;&nbsp;//&nbsp;request&nbsp;body\n&nbsp;&nbsp;data:&nbsp;{&nbsp;key:&nbsp;&quot;aa&quot;&nbsp;},&nbsp;&nbsp;//&nbsp;超时设置s\n&nbsp;&nbsp;timeout:&nbsp;1000,&nbsp;&nbsp;//&nbsp;跨域是否带Token\n&nbsp;&nbsp;withCredentials:&nbsp;false,&nbsp;&nbsp;//&nbsp;自定义请求处理\n&nbsp;&nbsp;adapter:&nbsp;function(resolve,&nbsp;reject,&nbsp;config)&nbsp;{},&nbsp;&nbsp;//&nbsp;身份验证信息\n&nbsp;&nbsp;auth:&nbsp;{&nbsp;uname:&nbsp;&quot;&quot;,&nbsp;pwd:&nbsp;&quot;12&quot;&nbsp;},&nbsp;&nbsp;//&nbsp;响应的数据格式&nbsp;json&nbsp;/&nbsp;blob&nbsp;/document&nbsp;/arraybuffer&nbsp;/&nbsp;text&nbsp;/&nbsp;stream\n&nbsp;&nbsp;responseType:&nbsp;&quot;json&quot;,&nbsp;&nbsp;//&nbsp;xsrf&nbsp;设置\n&nbsp;&nbsp;xsrfCookieName:&nbsp;&quot;XSRF-TOKEN&quot;,&nbsp;&nbsp;xsrfHeaderName:&nbsp;&quot;X-XSRF-TOKEN&quot;,&nbsp;&nbsp;//&nbsp;下传和下载进度回调\n&nbsp;&nbsp;onUploadProgress:&nbsp;function(progressEvent)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;Math.round(progressEvent.loaded&nbsp;*&nbsp;100&nbsp;/&nbsp;progressEvent.total);\n&nbsp;&nbsp;},&nbsp;&nbsp;onDownloadProgress:&nbsp;function(progressEvent)&nbsp;{},&nbsp;&nbsp;//&nbsp;最多转发数，用于node.js\n&nbsp;&nbsp;maxRedirects:&nbsp;5,&nbsp;&nbsp;//&nbsp;最大响应数据大小\n&nbsp;&nbsp;maxContentLength:&nbsp;2000,&nbsp;&nbsp;//&nbsp;自定义错误状态码范围\n&nbsp;&nbsp;validateStatus:&nbsp;function(status)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;status&nbsp;&gt;=&nbsp;200&nbsp;&amp;&amp;&nbsp;status&nbsp;&lt;&nbsp;300;\n&nbsp;&nbsp;},&nbsp;&nbsp;//&nbsp;用于node.js\n&nbsp;&nbsp;httpAgent:&nbsp;new&nbsp;http.Agent({&nbsp;keepAlive:&nbsp;true&nbsp;}),&nbsp;&nbsp;httpsAgent:&nbsp;new&nbsp;https.Agent({&nbsp;keepAlive:&nbsp;true&nbsp;}),&nbsp;&nbsp;//&nbsp;用于设置跨域请求代理\n&nbsp;&nbsp;proxy:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;host:&nbsp;&quot;127.0.0.1&quot;,&nbsp;&nbsp;&nbsp;&nbsp;port:&nbsp;8080,&nbsp;&nbsp;&nbsp;&nbsp;auth:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;username:&nbsp;&quot;aa&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password:&nbsp;&quot;2123&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;},&nbsp;&nbsp;//&nbsp;用于取消请求\n&nbsp;&nbsp;cancelToken:&nbsp;new&nbsp;CancelToken(function(cancel)&nbsp;{})\n};</pre><p><br/></p>', 'Vue-axios', '3a5c1830-b302-11e7-a629-775fc07e1eca', '2017-10-23 10:22:31.120', '2017-10-23 10:22:31.120')
code: 'ER_BAD_FIELD_ERROR'
errno: 1054
sqlMessage: 'Unknown column \'create_date\' in \'field list\''
sqlState: '42S22'
index: 0
sql: 'INSERT INTO `article`(`id`, `article_content`, `article_name`, `user_id`, `create_date`, `update_date`) VALUES(\'05ad1d00-b799-11e7-8e45-fb7739d6f516\', \'<h1 data-v-13f76525=\\"\\" data-v-3f216172=\\"\\" class=\\"post-title\\" style=\\"font-size: 2.7rem; margin: 0.67em 0px; padding: 0.27rem 0px; line-height: 1.3; color: rgb(51, 51, 51); font-family: -apple-system, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, Arial, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\\">Vue 折腾记 - (10) 给axios做个挺靠谱的封装(报错,鉴权,跳转,拦截,提示)</h1><h1 id=\\"-\\" style=\\"margin: 1.3rem 0px; line-height: 1.2;\\">前言</h1><p style=\\"line-height: 2.27rem;\\">不推荐完全copy过去,可以看看我是如何针对我这边业务;<br/>做的一个axios的封装及实现的思路</p><hr style=\\"box-sizing: content-box; height: 0px; overflow: visible; border-style: solid none none; border-top-color: rgb(221, 221, 221); border-bottom-width: initial; border-bottom-color: initial; border-left-width: initial; border-left-color: initial; border-right-width: initial; border-right-color: initial; margin-top: 2.7rem; margin-bottom: 2.7rem;\\"/><h1 id=\\"-\\" style=\\"margin: 1.3rem 0px; line-height: 1.2;\\">需求及实现</h1><ul style=\\"padding: 0px 0px 0px 2.7rem;\\" class=\\" list-paddingleft-2\\"><li><p>统一捕获接口报错</p></li><li><p>弹窗提示</p></li><li><p>报错重定向</p></li><li><p>基础鉴权</p></li><li><p>表单序列化</p></li></ul><hr style=\\"box-sizing: content-box; height: 0px; overflow: visible; border-style: solid none none; border-top-color: rgb(221, 221, 221); border-bottom-width: initial; border-bottom-color: initial; border-left-width: initial; border-left-color: initial; border-right-width: initial; border-right-color: initial; margin-top: 2.7rem; margin-bottom: 2.7rem;\\"/><h1 id=\\"-\\" style=\\"margin: 1.3rem 0px; line-height: 1.2;\\">实现的功能</h1><ul style=\\"padding: 0px 0px 0px 2.7rem;\\" class=\\" list-paddingleft-2\\"><li><p>统一捕获接口报错 : 用的axios内置的拦截器</p></li><li><p>弹窗提示: 引入&nbsp;<code style=\\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\\">Element UI</code>的<code style=\\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\\">Message</code>组件</p></li><li><p>报错重定向: 路由钩子</p></li><li><p>基础鉴权: 服务端过期时间戳和token,还有借助路由的钩子</p></li><li><p>表单序列化: 我这边直接用<code style=\\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\\">qs</code>(npm模块),你有时间也可以自己写</p></li></ul><hr style=\\"box-sizing: content-box; height: 0px; overflow: visible; border-style: solid none none; border-top-color: rgb(221, 221, 221); border-bottom-width: initial; border-bottom-color: initial; border-left-width: initial; border-left-color: initial; border-right-width: initial; border-right-color: initial; margin-top: 2.7rem; margin-bottom: 2.7rem;\\"/><h1 id=\\"-\\" style=\\"margin: 1.3rem 0px; line-height: 1.2;\\">效果图</h1><p style=\\"line-height: 2.27rem;\\"><span style=\\"font-weight: 700;\\">坑都已经爬过,现在复现那些错误有点麻烦..所以没法录制动态图</span></p><hr style=\\"box-sizing: content-box; height: 0px; overflow: visible; border-style: solid none none; border-top-color: rgb(221, 221, 221); border-bottom-width: initial; border-bottom-color: initial; border-left-width: initial; border-left-color: initial; border-right-width: initial; border-right-color: initial; margin-top: 2.7rem; margin-bottom: 2.7rem;\\"/><h1 id=\\"-\\" style=\\"margin: 1.3rem 0px; line-height: 1.2;\\">用法及封装</h1><ul style=\\"padding: 0px 0px 0px 2.7rem;\\" class=\\" list-paddingleft-2\\"><li><p>用法</p></li></ul><pre style=\\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1em; line-height: 1.93rem; overflow: auto;\\">//&nbsp;服务层&nbsp;,&nbsp;import默认会找该目录下index.js的文件,这个可能有小伙伴不知道//&nbsp;可以去了解npm的引入和es6引入的理论概念import&nbsp;axiosPlugin&nbsp;from&nbsp;&quot;./server&quot;;&nbsp;\\nVue.use(axiosPlugin);</pre><ul style=\\"padding: 0px 0px 0px 2.7rem;\\" class=\\" list-paddingleft-2\\"><li><p>对axios的封装(AXIOS:<code style=\\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\\">index.js</code>)</p></li></ul><pre style=\\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1em; line-height: 1.93rem; overflow: auto;\\">import&nbsp;axios&nbsp;from&nbsp;&quot;axios&quot;;import&nbsp;qs&nbsp;from&nbsp;&quot;qs&quot;;import&nbsp;{&nbsp;Message&nbsp;}&nbsp;from&nbsp;&quot;element-ui&quot;;import&nbsp;router&nbsp;from&nbsp;&quot;../router&quot;;const&nbsp;Axios&nbsp;=&nbsp;axios.create({&nbsp;&nbsp;baseURL:&nbsp;&quot;/&quot;,&nbsp;//&nbsp;因为我本地做了反向代理\\n&nbsp;&nbsp;timeout:&nbsp;10000,&nbsp;&nbsp;responseType:&nbsp;&quot;json&quot;,&nbsp;&nbsp;withCredentials:&nbsp;true,&nbsp;//&nbsp;是否允许带cookie这些\\n&nbsp;&nbsp;headers:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&quot;Content-Type&quot;:&nbsp;&quot;application/x-www-form-urlencoded;charset=utf-8&quot;\\n&nbsp;&nbsp;}\\n});//POST传参序列化(添加请求拦截器)Axios.interceptors.request.use(&nbsp;&nbsp;config&nbsp;=&gt;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;在发送请求之前做某件事\\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.method&nbsp;===&nbsp;&quot;post&quot;&nbsp;||\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.method&nbsp;===&nbsp;&quot;put&quot;&nbsp;||\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.method&nbsp;===&nbsp;&quot;delete&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;序列化\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.data&nbsp;=&nbsp;qs.stringify(config.data);\\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;若是有做鉴权token&nbsp;,&nbsp;就给头部带上token\\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(localStorage.token)&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.headers.Authorization&nbsp;=&nbsp;localStorage.token;\\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;config;\\n&nbsp;&nbsp;},\\n&nbsp;&nbsp;error&nbsp;=&gt;&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;Message({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;饿了么的消息弹窗组件,类似toast\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showClose:&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;error,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;&quot;error.data.error.message&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Promise.reject(error.data.error.message);\\n&nbsp;&nbsp;}\\n);//返回状态判断(添加响应拦截器)Axios.interceptors.response.use(&nbsp;&nbsp;res&nbsp;=&gt;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//对响应数据做些事\\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(res.data&nbsp;&amp;&amp;&nbsp;!res.data.success)&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Message({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;饿了么的消息弹窗组件,类似toast\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showClose:&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;res.data.error.message.message\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?&nbsp;res.data.error.message.message\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;res.data.error.message,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;&quot;error&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Promise.reject(res.data.error.message);\\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;res;\\n&nbsp;&nbsp;},\\n&nbsp;&nbsp;error&nbsp;=&gt;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;用户登录的时候会拿到一个基础信息,比如用户名,token,过期时间戳\\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;直接丢localStorage或者sessionStorage\\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!window.localStorage.getItem(&quot;loginUserBaseInfo&quot;))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;若是接口访问的时候没有发现有鉴权的基础信息,直接返回登录页\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/login&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;若是有基础信息的情况下,判断时间戳和当前的时间,若是当前的时间大于服务器过期的时间\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;乖乖的返回去登录页重新登录\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;lifeTime&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSON.parse(window.localStorage.getItem(&quot;loginUserBaseInfo&quot;)).lifeTime&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1000;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;nowTime&nbsp;=&nbsp;new&nbsp;Date().getTime();&nbsp;//&nbsp;当前时间的时间戳\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(nowTime,&nbsp;lifeTime);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(nowTime&nbsp;&gt;&nbsp;lifeTime);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(nowTime&nbsp;&gt;&nbsp;lifeTime)&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Message({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showClose:&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;&quot;登录状态信息过期,请重新登录&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;&quot;error&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/login&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;下面是接口回调的satus&nbsp;,因为我做了一些错误页面,所以都会指向对应的报错页面\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(error.response.status&nbsp;===&nbsp;403)&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/error/403&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(error.response.status&nbsp;===&nbsp;500)&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/error/500&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(error.response.status&nbsp;===&nbsp;502)&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/error/502&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(error.response.status&nbsp;===&nbsp;404)&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;router.push({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/error/404&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;返回&nbsp;response&nbsp;里的错误信息\\n&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;errorInfo&nbsp;=&nbsp;&nbsp;error.data.error&nbsp;?&nbsp;error.data.error.message&nbsp;:&nbsp;error.data;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Promise.reject(errorInfo);\\n&nbsp;&nbsp;}\\n);//&nbsp;对axios的实例重新封装成一个plugin&nbsp;,方便&nbsp;Vue.use(xxxx)export&nbsp;default&nbsp;{&nbsp;&nbsp;install:&nbsp;function(Vue,&nbsp;Option)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;Object.defineProperty(Vue.prototype,&nbsp;&quot;$http&quot;,&nbsp;{&nbsp;value:&nbsp;Axios&nbsp;});\\n&nbsp;&nbsp;}\\n};</pre><ul style=\\"padding: 0px 0px 0px 2.7rem;\\" class=\\" list-paddingleft-2\\"><li><p>路由钩子的调整(Router:<code style=\\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1rem; padding: 0.26rem 0.53em; word-break: break-word; color: rgb(78, 89, 128); background-color: rgb(248, 248, 248); border-radius: 2px; overflow-x: auto;\\">index.js</code>)</p></li></ul><pre style=\\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1em; line-height: 1.93rem; overflow: auto;\\">import&nbsp;Vue&nbsp;from&nbsp;&quot;vue&quot;;import&nbsp;Router&nbsp;from&nbsp;&quot;vue-router&quot;;import&nbsp;layout&nbsp;from&nbsp;&quot;@/components/layout/layout&quot;;//&nbsp;版块有点多,版块独立路由管理,里面都是懒加载引入import&nbsp;customerManage&nbsp;from&nbsp;&quot;./customerManage&quot;;&nbsp;//&nbsp;客户管理import&nbsp;account&nbsp;from&nbsp;&quot;./account&quot;;&nbsp;//登录import&nbsp;adManage&nbsp;from&nbsp;&quot;./adManage&quot;;&nbsp;//&nbsp;广告管理import&nbsp;dataStat&nbsp;from&nbsp;&quot;./dataStat&quot;;&nbsp;//&nbsp;数据统计import&nbsp;logger&nbsp;from&nbsp;&quot;./logger&quot;;&nbsp;//&nbsp;日志import&nbsp;manager&nbsp;from&nbsp;&quot;./manager&quot;;&nbsp;//&nbsp;管理者import&nbsp;putonManage&nbsp;from&nbsp;&quot;./putonManage&quot;;&nbsp;//&nbsp;投放管理import&nbsp;error&nbsp;from&nbsp;&quot;./error&quot;;&nbsp;//&nbsp;服务端错误import&nbsp;{&nbsp;Message&nbsp;}&nbsp;from&nbsp;&quot;element-ui&quot;;\\n\\nVue.use(Router);//&nbsp;请跳过这一段,看下面的const&nbsp;router&nbsp;=&nbsp;new&nbsp;Router({&nbsp;&nbsp;hashbang:&nbsp;false,&nbsp;&nbsp;mode:&nbsp;&quot;history&quot;,&nbsp;&nbsp;routes:&nbsp;[\\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redirect:&nbsp;&quot;/adver&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;component:&nbsp;layout,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;children:&nbsp;[\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...customerManage,\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...adManage,\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...dataStat,\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...putonManage,\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...manager,\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...logger\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]\\n&nbsp;&nbsp;&nbsp;&nbsp;},\\n&nbsp;&nbsp;&nbsp;&nbsp;...account,\\n&nbsp;&nbsp;&nbsp;&nbsp;...error\\n&nbsp;&nbsp;]\\n});//&nbsp;路由拦截//&nbsp;差点忘了说明,不是所有版块都需要鉴权的//&nbsp;所以需要鉴权,我都会在路由meta添加添加一个字段requireLogin,设置为true的时候//&nbsp;这货就必须走鉴权,像登录页这些不要,是可以直接访问的!!!router.beforeEach((to,&nbsp;from,&nbsp;next)&nbsp;=&gt;&nbsp;{&nbsp;&nbsp;if&nbsp;(to.matched.some(res&nbsp;=&gt;&nbsp;res.meta.requireLogin))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;判断是否需要登录权限\\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(window.localStorage.getItem(&quot;loginUserBaseInfo&quot;))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;判断是否登录\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;lifeTime&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JSON.parse(window.localStorage.getItem(&quot;loginUserBaseInfo&quot;)).lifeTime&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1000;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;nowTime&nbsp;=&nbsp;(new&nbsp;Date()).getTime();&nbsp;//&nbsp;当前时间的时间戳\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(nowTime&nbsp;&lt;&nbsp;lifeTime)&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next();\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Message({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showClose:&nbsp;true,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;&quot;登录状态信息过期,请重新登录&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;&quot;error&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/login&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;没登录则跳转到登录界面\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next({&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;&quot;/login&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\\n&nbsp;&nbsp;&nbsp;&nbsp;}\\n&nbsp;&nbsp;}&nbsp;else&nbsp;{\\n&nbsp;&nbsp;&nbsp;&nbsp;next();\\n&nbsp;&nbsp;}\\n});export&nbsp;default&nbsp;router;</pre><p style=\\"line-height: 2.27rem;\\"><span style=\\"font-weight: 700;\\">axios可配置的一些选项,其他的具体看官网说明哈</span></p><pre style=\\"font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1em; line-height: 1.93rem; overflow: auto;\\">export&nbsp;default&nbsp;{&nbsp;&nbsp;//&nbsp;请求地址\\n&nbsp;&nbsp;url:&nbsp;&quot;/user&quot;,&nbsp;&nbsp;//&nbsp;请求类型\\n&nbsp;&nbsp;method:&nbsp;&quot;get&quot;,&nbsp;&nbsp;//&nbsp;请根路径\\n&nbsp;&nbsp;baseURL:&nbsp;&quot;http://www.mt.com/api&quot;,&nbsp;&nbsp;//&nbsp;请求前的数据处理\\n&nbsp;&nbsp;transformRequest:&nbsp;[function(data)&nbsp;{}],&nbsp;&nbsp;//&nbsp;请求后的数据处理\\n&nbsp;&nbsp;transformResponse:&nbsp;[function(data)&nbsp;{}],&nbsp;&nbsp;//&nbsp;自定义的请求头\\n&nbsp;&nbsp;headers:&nbsp;{&nbsp;&quot;x-Requested-With&quot;:&nbsp;&quot;XMLHttpRequest&quot;&nbsp;},&nbsp;&nbsp;//&nbsp;URL查询对象\\n&nbsp;&nbsp;params:&nbsp;{&nbsp;id:&nbsp;12&nbsp;},&nbsp;&nbsp;//&nbsp;查询对象序列化函数\\n&nbsp;&nbsp;paramsSerializer:&nbsp;function(params)&nbsp;{},&nbsp;&nbsp;//&nbsp;request&nbsp;body\\n&nbsp;&nbsp;data:&nbsp;{&nbsp;key:&nbsp;&quot;aa&quot;&nbsp;},&nbsp;&nbsp;//&nbsp;超时设置s\\n&nbsp;&nbsp;timeout:&nbsp;1000,&nbsp;&nbsp;//&nbsp;跨域是否带Token\\n&nbsp;&nbsp;withCredentials:&nbsp;false,&nbsp;&nbsp;//&nbsp;自定义请求处理\\n&nbsp;&nbsp;adapter:&nbsp;function(resolve,&nbsp;reject,&nbsp;config)&nbsp;{},&nbsp;&nbsp;//&nbsp;身份验证信息\\n&nbsp;&nbsp;auth:&nbsp;{&nbsp;uname:&nbsp;&quot;&quot;,&nbsp;pwd:&nbsp;&quot;12&quot;&nbsp;},&nbsp;&nbsp;//&nbsp;响应的数据格式&nbsp;json&nbsp;/&nbsp;blob&nbsp;/document&nbsp;/arraybuffer&nbsp;/&nbsp;text&nbsp;/&nbsp;stream\\n&nbsp;&nbsp;responseType:&nbsp;&quot;json&quot;,&nbsp;&nbsp;//&nbsp;xsrf&nbsp;设置\\n&nbsp;&nbsp;xsrfCookieName:&nbsp;&quot;XSRF-TOKEN&quot;,&nbsp;&nbsp;xsrfHeaderName:&nbsp;&quot;X-XSRF-TOKEN&quot;,&nbsp;&nbsp;//&nbsp;下传和下载进度回调\\n&nbsp;&nbsp;onUploadProgress:&nbsp;function(progressEvent)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;Math.round(progressEvent.loaded&nbsp;*&nbsp;100&nbsp;/&nbsp;progressEvent.total);\\n&nbsp;&nbsp;},&nbsp;&nbsp;onDownloadProgress:&nbsp;function(progressEvent)&nbsp;{},&nbsp;&nbsp;//&nbsp;最多转发数，用于node.js\\n&nbsp;&nbsp;maxRedirects:&nbsp;5,&nbsp;&nbsp;//&nbsp;最大响应数据大小\\n&nbsp;&nbsp;maxContentLength:&nbsp;2000,&nbsp;&nbsp;//&nbsp;自定义错误状态码范围\\n&nbsp;&nbsp;validateStatus:&nbsp;function(status)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;status&nbsp;&gt;=&nbsp;200&nbsp;&amp;&amp;&nbsp;status&nbsp;&lt;&nbsp;300;\\n&nbsp;&nbsp;},&nbsp;&nbsp;//&nbsp;用于node.js\\n&nbsp;&nbsp;httpAgent:&nbsp;new&nbsp;http.Agent({&nbsp;keepAlive:&nbsp;true&nbsp;}),&nbsp;&nbsp;httpsAgent:&nbsp;new&nbsp;https.Agent({&nbsp;keepAlive:&nbsp;true&nbsp;}),&nbsp;&nbsp;//&nbsp;用于设置跨域请求代理\\n&nbsp;&nbsp;proxy:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;host:&nbsp;&quot;127.0.0.1&quot;,&nbsp;&nbsp;&nbsp;&nbsp;port:&nbsp;8080,&nbsp;&nbsp;&nbsp;&nbsp;auth:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;username:&nbsp;&quot;aa&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password:&nbsp;&quot;2123&quot;\\n&nbsp;&nbsp;&nbsp;&nbsp;}\\n&nbsp;&nbsp;},&nbsp;&nbsp;//&nbsp;用于取消请求\\n&nbsp;&nbsp;cancelToken:&nbsp;new&nbsp;CancelToken(function(cancel)&nbsp;{})\\n};</pre><p><br/></p>\', \'Vue-axios\', \'3a5c1830-b302-11e7-a629-775fc07e1eca\', \'2017-10-23 10:22:31.120\', \'2017-10-23 10:22:31.120\')'
headers: { 'Access-Control-Allow-Origin': 'http://localhost:8080' }
name: 'ER_BAD_FIELD_ERRORError'
pid: 1057
hostname: tankerdeiMac.local

2017-10-23 15:40:44,277 ERROR 32710 [-/192.168.1.104/-/159ms POST /articleDelete] nodejs.ER_BAD_FIELD_ERRORError: ER_BAD_FIELD_ERROR: Unknown column 'article_id' in 'where clause'
    at Query.Sequence._packetToError (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/sequences/Sequence.js:52:14)
    at Query.ErrorPacket (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/sequences/Query.js:77:18)
    at Protocol._parsePacket (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/Protocol.js:279:23)
    at Parser.write (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/Parser.js:76:12)
    at Protocol.write (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/protocol/Protocol.js:39:16)
    at Socket.<anonymous> (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/Connection.js:103:28)
    at emitOne (events.js:96:13)
    at Socket.emit (events.js:188:7)
    at readableAddChunk (_stream_readable.js:176:18)
    at Socket.Readable.push (_stream_readable.js:134:10)
    --------------------
    at Pool.query (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/mysql/lib/Pool.js:199:23)
    at /Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/pify/index.js:29:7
    at Pool.<anonymous> (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/pify/index.js:12:10)
    at Pool.ret [as query] (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/pify/index.js:56:34)
    at RDSClient.proto._query (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/ali-rds/lib/client.js:34:20)
    at RDSClient.proto.query (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/ali-rds/lib/operator.js:54:29)
    at next (native)
    at onFulfilled (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/co/index.js:65:19)
    at /Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/co/index.js:54:5
    at RDSClient.co (/Users/tanker/Documents/Tanker/blog/blog-backend/node_modules/co/index.js:50:10)
    sql: DELETE FROM `article` WHERE `article_id` = 'b9940930-b79b-11e7-9336-ab97129c8a57'
code: 'ER_BAD_FIELD_ERROR'
errno: 1054
sqlMessage: 'Unknown column \'article_id\' in \'where clause\''
sqlState: '42S22'
index: 0
sql: 'DELETE FROM `article` WHERE `article_id` = \'b9940930-b79b-11e7-9336-ab97129c8a57\''
headers: { 'Access-Control-Allow-Origin': 'http://localhost:8080' }
name: 'ER_BAD_FIELD_ERRORError'
pid: 32710
hostname: tankerdeiMac.local

